name: Development pipeline 

on: 
  push:
    branches:
      - main

  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_development_pipeline:
    runs-on: ubuntu-20.04
    steps: 
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: 
          node-version: '20'
      - name: Install dependencies
        run: npm install  
      - name: Check Style
        run : npm run eslint
      - name: build
        run: npm run build
      - name: test
        run: npm test
      - name: e2e_tests
        run: |
          npx playwright install --with-deps
          npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  tag_release:
    needs: [simple_development_pipeline]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}  
    runs-on: ubuntu-20.04
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag    
        id: tag_version
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true

  deploy:
    needs: [simple_development_pipeline, tag_release]
    name: Deploy app
    runs-on: ubuntu-20.04
    environment: production
    concurrency: 
      group: deploy-group
      cancel-in-progress: true  
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}  
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - name: Delete tag if d;eployment fails
        if: failure()
        run: |
          git fetch --tags
          git push --delete origin ${{ needs.tag_release.outputs.new_tag }}
          git tag -d ${{ needs.tag_release.outputs.new_tag }}
  
  notification:
    needs: [deploy]
    runs-on: ubuntu-20.04
    if: always()
    steps:
      - name: Test success
        uses: rjstone/discord-webhook-notify@1399c1b2d57cc05894d506d2cfdc33c5f012b993
        if: success()
        with:
          severity: info
          details: Test Succeeded!
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Test failure
        uses: rjstone/discord-webhook-notify@1399c1b2d57cc05894d506d2cfdc33c5f012b993
        if: failure()
        with:
          severity: error
          details: Test Failed!
          webhook: ${{ secrets.DISCORD_WEBHOOK }}